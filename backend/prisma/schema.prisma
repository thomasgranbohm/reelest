generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id              String           @id @default(auto()) @map("_id") @db.ObjectId
    createdAt       DateTime         @default(now())
    displayName     String
    email           String           @unique
    followedBy      User[]           @relation("UserFollows", fields: [followedByIDs], references: [id])
    followedByIDs   String[]         @db.ObjectId
    following       User[]           @relation("UserFollows", fields: [followingIDs], references: [id])
    followingIDs    String[]         @db.ObjectId
    password        String
    profilePictures ProfilePicture[]
    updatedAt       DateTime         @default(now())
    username        String           @unique
    videos          Video[]
}

model Video {
    id          String      @id @default(auto()) @map("_id") @db.ObjectId
    createdAt   DateTime    @default(now())
    description String?
    status      VideoStatus @default(PROCESSING)
    title       String
    updatedAt   DateTime    @default(now())
    userId      String      @db.ObjectId
    user        User        @relation(fields: [userId], references: [id])
    thumbnails  Thumbnail[]
}

enum VideoStatus {
    CREATED
    PROCESSING
    PUBLISHED
}

enum ImageType {
    WEBP
    BASE64
}

model ProfilePicture {
    id     String    @id @default(auto()) @map("_id") @db.ObjectId
    height Int
    type   ImageType
    url    String
    user   User      @relation(fields: [userId], references: [id])
    userId String    @db.ObjectId
    width  Int
}

model Thumbnail {
    id      String    @id @default(auto()) @map("_id") @db.ObjectId
    height  Int
    type    ImageType
    url     String
    video   Video     @relation(fields: [videoId], references: [id])
    videoId String    @db.ObjectId
    width   Int
}
